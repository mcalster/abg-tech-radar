title
ABG Development Tech Radar
===
date
2023-03-16
===
quadrant,   alias
q1,         langlib
q2,         techniques
q3,         platforms
q4,         tools
===
quadrant,   title
q1,         Languages & Frameworks
q2,         Methods & Techniques
q3,         Platforms & Infrastructure 
q4,         Tools
===
name,quadrant,ring,description
C#,langlib,Adopt,<a href='https://docs.microsoft.com/en-us/dotnet/csharp/'>C#</a> is our language for development on the Optimizely platform. For general purpose developement Java & Spring Boot is the default.
TypeScript,langlib,Adopt,<a href='https://www.typescriptlang.org/'>TypeScript</a> is our default choice for running code in the browser. It's strongly-typed and smoothes out the rough bits of JavaScript.
Node.js,langlib,Assess,<a href='https://docs.microsoft.com/en-us/dotnet/csharp/'>C#</a> is our language for development on the Optimizely platform. For general purpose developement Java & Spring Boot is the default.
WebFLux,langlib,Hold,
Go,langlib,Hold,<a href='https://golang.org/'>Go</a> is the natural language to use when writing cloud native software. We depriotize this language until we can achieve critical mass.
R,langlib,Hold,
PL/SQL,langlib,Hold,PL/SQL is a standard and portable language for Oracle Database development. It is our language for development on the TIA system running on the Oracle Database
Apex,langlib,Adopt,<a href='https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_intro_what_is_apex.htm'>Apex</a> is our language for development on the Salesforce platform. For general purpose developement Java & Spring Boot is the default.
Java 8,langlib,Hold,We are moving to the newer versions of java. No new development should be started.
Bash,langlib,Adopt,<a href='https://www.gnu.org/software/bash/'>Bash</a> is our default choice for scripting internal tools. Everyone should be familiar with the Bash toolkit.
Python,langlib,Adopt,<a href='https://www.python.org/'>Python</a> provides a powerful language for gluing components together. We encourage trialling Python when the alternative would be a large Bash script (caveated by why isn't it easy to write a Bash script?).
PowerShell,langlib,Hold,Don't use PowerShell for new projects - prefer Bash.
.NET 7,langlib,Adopt,"<a href='https://dotnet.microsoft.com/'>.NET 7</a> is the Latest version of .NET. It is cross-platform and a great choice for desktop, web and cloud-based applications."
.NET 6,langlib,Hold,"<a href='https://dotnet.microsoft.com/'>.NET 6</a> is in Long Term Support (LTS). It's fine to keep it for some time, but we should strive to update all our actively developed products to the Latest version."
Web API (ASP.NET Core),langlib,Adopt,<a href='https://learn.microsoft.com/en-us/aspnet/core/web-api'>ASP.NET Core Web API</a> for building RESTful APIs on .NET
React,langlib,Adopt,<a href='https://reactjs.org/'>React</a> makes it painless to create interactive UIs.
Objectâ€“relational mappers (ORMs),langlib,Hold,"Unless working with a large number of simple entities, prefer writing SQL directly or using a lightweight object mapper such as <a href='https://github.com/DapperLib/Dapper'>Dapper</a>."
Java 11/17,langlib,Adopt,We are currently in the process of test running updating our Java version for new developments in our Java projects
Spring Boot,langlib,Adopt,"Spring Boot allows easy setup of standalone Spring-based applications. It's ideal for pulling up new microservices and easy to deploy. It also makes data access less of a pain, thanks to the JPA mappings through Spring Data. We like that Spring Boot simplifies Java services built with Spring"
Project Lombok,langlib,Adopt,"<a href=""https://projectlombok.org/"">Project Lombok</a> is a Java code enhancement for introducing a set of tools to reduce boiler plating and increase developer efficiency and allowing for a more C# style of coding to help on-board new developers from the wider Red Gate environment"
jUnit 5,langlib,Adopt,Test framework for Java code
Oracle FORMs,langlib,Hold,Oracle FORMS is the technoly used to build the front-end for TIA.  No new development should be started. 
Oracle ADF,langlib,Hold,Oracle ADF is an Oracle based dialect of Java Server Faces. No new development should be started. 																					
Visual Studio,tools,Adopt,Visual Studio is our default IDE for developing in C#. We get the Enterprise edition via our MSDN subscription.
VS Code,tools,Adopt,A free lightweight IDE. Our text editor of choice.
Github Actions,tools,Adopt,Github Actions is our default build system.
GitHub,tools,Adopt,All development should use GitHub.
Gitlab CI,tools,Hold,Gitlab CI is our legacy build system.
Jenkins,tools,Hold,Is our legacy Build system. Is moving to Github
Serena Dimensions,tools,Hold,Serena Dimensions is being replaced by Github
Azure DevOps,tools,Hold,"We expect Microsoft will prioritize GitHub Actions over Azure DevOps for future development, so Azure DevOps is not recommended for new projects."
Terraform,tools,Adopt,Used for automating infrastructure provisioning.
JDBC,tools,Adopt,Database connectivity for Java.
Flyway,tools,Adopt,Our default tool for migrating database schemas.
WSL 2,tools,Adopt,Windows Subsystem for Linux should be installed on every development machine
GraphQL,tools,Assess,"<a href='https://github.com/facebook/graphql'>GraphQL</a> Could be used for some interesting patterns of use, including GraphQL for server-side resource aggregation. That said, there are concerns about misuse of this framework and some of the problems that can occur. Examples include performance gotchas around N+1 queries and lots of boilerplate code needed when adding new models, leading to complexity."
Hashicorp Vault,tools,Hold,Use a password manager (or Azure Key Vault) instead.
Docker,tools,Adopt,"Docker should be used as the default containerisation technology. Used for building, testing and deployment."
gRPC,tools,Assess,"<a href='https://grpc.io/'>gRPC</a> is a high-performance RPC framework which we may investigate for high-volume data collection (for example, SQL Monitor)."
Snyk,tools,Assess,We could use Snyk to scan for known vulnerabilities in our products' dependencies.
Github Advanced Security,tools,Assess,We could use GHAS to scan for known vulnerabilities in our products' dependencies.
Feature Flagging,tools,Adopt,If your usage of feature flagging becomes sufficiently complicated then it's time to use <a href='https://learn.microsoft.com/en-us/azure/azure-app-configuration/concept-feature-management'>Azure App Configuration</a>.
Kubernetes,platforms,Hold,Granted <a href='https://kubernetes.io/'>K8S</a> is the undeniable winner of orchestration tools. We don't want the managment overhead a K8S cluster an prefer higher level PaaS services such as Azure App Service or Spring Apps
Oracle SOA,platforms,Hold,Oracle SOA is an Oracle based BPM engine.We are moving towards Spring Boot and Azure. No new development should be started.                                                                                                                                                                         
Oracle OSB,platforms,Hold,Oracle Service Bus is an Oracle based Enterprise Service Bus. We are moving towards Spring Boot and Azure. No new development should be started.                                                                                                                                                                         
Oracle Weblogic,platforms,Hold,Oracle Weblogic is an Oracle developed Web server used for serving ADF and FORMS applications. We are moving towards Spring Boot and Azure. No new development should be started.                                                                                                                                                                         
Azure SQL,platforms,Adopt,"When a product needs to store more complex data than it can fit in a flat file, we ask the customer for a SQL DB."
Azure PostgreSQL as backing store,platforms,Adopt,"If there's a very good reason to use a lightweight/free database engine, we should choose Postgres."
Azure Storage Accounts as backing store,platforms,Adopt,"If there's a reason to use a highly scalable blob store, we should choose Azure storage Accounts. E.g. Large files, sftp access, datalake."
Azure Key Vault,platforms,Adopt,We recommend <a href='https://learn.microsoft.com/da-dk/azure/key-vault/general/overview'>Azure Key Vault</a> for storing secrets.
Azure App Configuration,platforms,Adopt,We recommend <a href='https://learn.microsoft.com/en-us/azure/azure-app-configuration/concept-feature-management'>Azure App Configuration</a> for storing configurations and feature flagging.
Azure Service Bus,platforms,Adopt,TBC
Azure Event Hubs,platforms,Adopt,TBC
Azure Spring Apps,platforms,Adopt,TBC
Azure App Service,platforms,Adopt,TBC
Azure Functions,platforms,Adopt,TBC
Azure Application Insights,tools,Adopt,All applications should use Application Insights as the default developer telemetry platform (incl. feature usage and error reporting).
Azure Monitor,tools,Adopt,All applications should use Application Monitor as the central logging platform (incl. alerting on usage and error reporting).
Azure Data Factory,tools,Adopt,TBC
Azure Databricks,platforms,Adopt,TBC
Azure Purview,tools,Adopt,TBC
Airflow,tools,Trial,TBC
RabbitMQ,platforms,Hold,We are moving of RabbitMQ toward Azure Service Bus for 'Queues' and Azure Event Hub for 'Topics'.  No new development should be started.
Consul,platforms,Hold,We are moving of Consul toward Azure App Configuration.
Graphana,tools,Hold,We are moving of Grapaha towards Azure Monitor.
Prometheus,tools,Hold,We are moving of Prometheus toward Azure Monitor.
Virtual Machines,platforms,Hold,Prefer using higher level PaaS services.
CLIs,techniques,Adopt,"Product should, where possible, expose functionality via a CLI."
RESTful APIs,techniques,Adopt,A REST architectural style is our default choice for building web APIs. Deviations can be made when it makes sense to do so.
Infrastructure as code,techniques,Adopt,Infrastructure should be provisioned through code rather than manually (except for ad-hoc testing)
Automated code style settings,techniques,Adopt,Codebases should be formatted consistently. Automated code-style settings achieve this without fuss.
Static code analysis (linters),techniques,Adopt,Static code analysis is invaluable for automatically checking for problems in code. We use ESLint for JS and Roslyn-based analyzers for .NET. We also experimented with SonarQube but our implementation wasn't giving us confidence.
Semantic Versioning,techniques,Adopt,We should use semver for all our versioning needs unless there's a compelling reason not to.
Database Agnosticism,techniques,Adopt,We aim for feature parity between products that support different database engines.
Feature Flags,techniques,Adopt,"Feature Flags are a great technique for minimizing long-lived feature branches. Our recommendation is to focus on simplicity - if you find yourself writing substantial code to support Feature Flags, consider using a third-party solution."
Continuous delivery,techniques,Adopt,Products should be ready for release at any time.
Continuous Deployment,techniques,Assess,"We'd like to evaluate technology that increases our deployment frequency, with a view to getting value into the hands of our users as quickly as possible."
Build inside Docker containers,techniques,Adopt,"We should reduce build dependencies by building and testing our products inside containers. This is a pre-requisite for performing builds on cloud based CI providers, e.g. GitHub"
AI/ML,techniques,Adopt,"AI/ML are becoming commoditized. Off-the-shelf software is available for predictive modelling, text analysis, anomaly detection and much more."
Domain Driven Design,techniques,Assess,"Domain-Driven Design (DDD) defines many concepts and patterns that help design software effectively, in line with the business requirements."
Automation/Low-code solutions,techniques,Assess,"Remote is driving a digital transformation across industries. Low-code solutions, such as Power Apps, allow organizations to modernize these processes."
Git Ops,techniques,Assess,"The core idea of GitOps is having a Git repository that always contains declarative descriptions of the infrastructure currently desired in the production environment and an automated process to make the production environment match the described state in the repository. If you want to deploy a new application or update an existing one, you only need to update the repository - the automated process handles everything else. Itâ€™s like having cruise control for managing your applications in production. <a href='https://www.gitops.tech/'>Read more</a>, currently being trialled for Platform Hosted"
DAPR,langlib,Assess,"DAPR (Distributed Application Runtime - <a href='https://dapr.io/'>https://dapr.io/</a>) is an abstraction layer for use in a distributed application, currently being trialled by Platform for both Hosted and Enterprise. It is used to standardise how to communicate external systems in such a way we can uniformly add features through the DAPR sidecar"
Axon,langlib,Assess,"<a href='https://developer.axoniq.io/'>Axon</a>) is an abstraction layer for use in a Domain Driven Design development methodology. Axon provides a unified, productive way of developing Java applications that can evolve without significant refactoring from a monolith to Event-Driven microservices."
Asynchronous state management in React,techniques,Adopt,"Asynchronous state management in React should be delegated to a third-party framework such as <a href='https://tanstack.com/query/v4/docs/overview'>react-query</a>. This avoids manual management of promises' states (e.g. loading/errors), and allows using suspense and error boundaries in modern React."